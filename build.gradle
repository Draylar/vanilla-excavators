plugins {
	id 'fabric-loom' version '0.2.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "vanillaexcavators"
version = "1.1.0"

minecraft {
}

repositories {
	jcenter()

	maven { url = "https://maven.fabricmc.net/" }
	maven { url = 'http://maven.sargunv.s3-website-us-west-2.amazonaws.com/' }
	maven { url = 'http://server.bbkr.space:8081/artifactory/libs-release' }
	maven { url = 'https://jitpack.io' }

	jcenter()
}


dependencies {
	minecraft "com.mojang:minecraft:1.14.4"
	mappings "net.fabricmc:yarn:1.14.4+build.16:v2"
	modImplementation "net.fabricmc:fabric-loader:0.8.2+build.194"
	modImplementation "net.fabricmc.fabric-api:fabric-api:0.5.12+build.249-1.14"

	// LibCD for conditional recipes
	modApi 'io.github.cottonmc:LibCD:1.3.1+1.14.4'
	include 'io.github.cottonmc:LibCD:1.3.1+1.14.4'

	// auto config
	modApi "me.sargunvohra.mcmods:auto-config:1.2.0+mc1.14.4"
	include "me.sargunvohra.mcmods:auto-config:1.2.0+mc1.14.4"

	// cloth config
	modApi 'me.shedaniel.cloth:config-2:0.5.2'
	include 'me.shedaniel.cloth:config-2:0.5.2'

	// DynaGear for hammers in more materials
	modApi "io.github.cottonmc:DynaGear:1.2.0+1.14.3"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}